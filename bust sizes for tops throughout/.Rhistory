print(p)
aes(image = "/Users/ananya/columbia/somapython/somefolder/ralphl.jpg")
aes(image = "/Users/ananya/columbia/somapython/somefolder/ralphl.jpg")
library(ggplot2)
library(ggbeeswarm)
library(ggimage)
# Read the CSV file (update the path to your file if needed)
tops_df <- read.csv("/Users/ananya/columbia/somapython/data_studio/clothing sizes/tops.csv")
head(tops_df)
# Subset for XL sizes
top_df_XL <- subset(tops_df, Letter.Sizing == "XL")
# Ensure the file path to the image is correct
img_path <- "/Users/ananya/columbia/somapython/somefolder/ralphl.jpg"
# Create a shared beeswarm positioning object so that all layers align.
pos <- position_beeswarm(dodge.width = 0.8)
# Build the plot:
# 1. Plot non-Ralph Lauren points normally.
# 2. For the Ralph Lauren points, use geom_beeswarm with shape = NA (so nothing is drawn)
#    then overlay the image using geom_image with the same positioning.
p <- ggplot(top_df_XL, aes(x = Bust, y = Letter.Sizing, color = Letter.Sizing)) +
# Normal points for all brands except Ralph Lauren Size Charts
geom_beeswarm(data = subset(top_df_XL, Brands != "Ralph Lauren Size Charts"),
size = 6, position = pos) +
# Compute positions for Ralph Lauren points but do not draw them
geom_beeswarm(data = subset(top_df_XL, Brands == "Ralph Lauren Size Charts"),
size = 6, position = pos, shape = NA) +
# Overlay the image for Ralph Lauren points
geom_image(data = subset(top_df_XL, Brands == "Ralph Lauren Size Charts"),
aes(image = img_path),
position = pos,
size = 0.1) +   # Adjust this size until it fits your dot
scale_color_brewer(palette = "Set2") +
scale_x_continuous(breaks = seq(floor(min(top_df_XL$Bust)),
ceiling(max(top_df_XL$Bust)), by = 1)) +
theme_minimal() +
labs(x = "Bust measurement in inches",
y = "Size",
color = "Size",
title = "Beeswarm Plot with Ralph Lauren Logo") +
theme(axis.text.x = element_text(angle = 0, hjust = 0.5))
print(p)
library(ggplot2)
library(ggbeeswarm)
library(ggimage)
# Read the CSV file (update the path to your file if needed)
tops_df <- read.csv("/Users/ananya/columbia/somapython/data_studio/clothing sizes/tops.csv")
head(tops_df)
# Subset for XL sizes
top_df_XL <- subset(tops_df, Letter.Sizing == "XL")
# Ensure the file path to the image is correct
img_path <- "/Users/ananya/columbia/somapython/somefolder/ralphl.jpg"
# Create a shared beeswarm positioning object so that all layers align.
pos <- position_beeswarm(dodge.width = 0.8)
# Build the plot:
# 1. Plot non-Ralph Lauren points normally.
# 2. For the Ralph Lauren points, use geom_beeswarm with shape = NA (so nothing is drawn)
#    then overlay the image using geom_image with the same positioning.
p <- ggplot(top_df_XL, aes(x = Bust, y = Letter.Sizing, color = Letter.Sizing)) +
# Normal points for all brands except Ralph Lauren Size Charts
geom_beeswarm(data = subset(top_df_XL, Brands != "Ralph Lauren Size Charts"),
size = 6, position = pos) +
# Compute positions for Ralph Lauren points but do not draw them
geom_beeswarm(data = subset(top_df_XL, Brands == "Ralph Lauren Size Charts"),
size = 6, position = pos, shape = NA) +
# Overlay the image for Ralph Lauren points
geom_image(data = subset(top_df_XL, Brands == "Ralph Lauren Size Charts"),
aes(image = img_path),
position = pos,
size = 0.1) +   # Adjust this size until it fits your dot
scale_color_brewer(palette = "Set2") +
scale_x_continuous(breaks = seq(floor(min(top_df_XL$Bust)),
ceiling(max(top_df_XL$Bust)), by = 1)) +
theme_minimal() +
labs(x = "Bust measurement in inches",
y = "Size",
color = "Size",
title = "Beeswarm Plot with Ralph Lauren Logo") +
theme(axis.text.x = element_text(angle = 0, hjust = 0.5))
print(p)
library(ggplot2)
library(ggbeeswarm)
library(ggimage)
# Read the CSV file (update the path to your file if needed)
tops_df <- read.csv("/Users/ananya/columbia/somapython/data_studio/clothing sizes/tops.csv")
head(tops_df)
# Subset for XL sizes
top_df_XL <- subset(tops_df, Letter.Sizing == "XL")
# Ensure the file path to the image is correct
img_path <- "/Users/ananya/columbia/somapython/data_studio/clothing sizes/tops.csv"
# Create a shared beeswarm positioning object so that all layers align.
pos <- position_beeswarm(dodge.width = 0.8)
# Build the plot:
# 1. Plot non-Ralph Lauren points normally.
# 2. For the Ralph Lauren points, use geom_beeswarm with shape = NA (so nothing is drawn)
#    then overlay the image using geom_image with the same positioning.
p <- ggplot(top_df_XL, aes(x = Bust, y = Letter.Sizing, color = Letter.Sizing)) +
# Normal points for all brands except Ralph Lauren Size Charts
geom_beeswarm(data = subset(top_df_XL, Brands != "Ralph Lauren Size Charts"),
size = 6, position = pos) +
# Compute positions for Ralph Lauren points but do not draw them
geom_beeswarm(data = subset(top_df_XL, Brands == "Ralph Lauren Size Charts"),
size = 6, position = pos, shape = NA) +
# Overlay the image for Ralph Lauren points
geom_image(data = subset(top_df_XL, Brands == "Ralph Lauren Size Charts"),
aes(image = img_path),
position = pos,
size = 0.1) +   # Adjust this size until it fits your dot
scale_color_brewer(palette = "Set2") +
scale_x_continuous(breaks = seq(floor(min(top_df_XL$Bust)),
ceiling(max(top_df_XL$Bust)), by = 1)) +
theme_minimal() +
labs(x = "Bust measurement in inches",
y = "Size",
color = "Size",
title = "Beeswarm Plot with Ralph Lauren Logo") +
theme(axis.text.x = element_text(angle = 0, hjust = 0.5))
print(p)
library(ggplot2)
library(ggbeeswarm)
library(ggimage)
# Read the CSV file (adjust the path as needed)
tops_df <- read.csv("/Users/ananya/columbia/somapython/data_studio/clothing sizes/tops.csv")
head(tops_df)
# Subset for XL sizes
top_df_XL <- subset(tops_df, Letter.Sizing == "XL")
# Define the absolute file path for your JPEG image (with file:/// prefix if needed)
img_path <- "file:///Users/ananya/columbia/somapython/data_studio/clothing sizes/ralphl.jpg"
# Option: Verify that the file exists
print(file.exists("/Users/ananya/columbia/somapython/somefolder/ralphl.jpg"))  # Should return TRUE
# Add an image column only for the Ralph Lauren row
top_df_XL$img <- ifelse(top_df_XL$Brands == "Ralph Lauren Size Charts", img_path, NA)
# Create a shared beeswarm positioning object
pos <- position_beeswarm(dodge.width = 0.8)
# Build the plot:
p <- ggplot(top_df_XL, aes(x = Bust, y = Letter.Sizing, color = Letter.Sizing)) +
# Plot points for all brands except Ralph Lauren normally.
geom_beeswarm(data = subset(top_df_XL, Brands != "Ralph Lauren Size Charts"),
size = 6, position = pos) +
# For Ralph Lauren rows, compute positions but don't draw a point.
geom_beeswarm(data = subset(top_df_XL, Brands == "Ralph Lauren Size Charts"),
size = 6, position = pos, shape = NA) +
# Overlay the image using the same positioning.
geom_image(data = subset(top_df_XL, Brands == "Ralph Lauren Size Charts"),
aes(image = img),
position = pos,
size = 0.1) +   # Adjust size so the logo fits your dot
scale_color_brewer(palette = "Set2") +
scale_x_continuous(breaks = seq(floor(min(top_df_XL$Bust)),
ceiling(max(top_df_XL$Bust)), by = 1)) +
theme_minimal() +
labs(x = "Bust measurement in inches",
y = "Size",
color = "Size",
title = "Beeswarm Plot with Ralph Lauren Logo") +
theme(axis.text.x = element_text(angle = 0, hjust = 0.5))
print(p)
library(ggplot2)
library(ggbeeswarm)
library(ggimage)
# Read the CSV file (adjust the path as needed)
tops_df <- read.csv("/Users/ananya/columbia/somapython/data_studio/clothing sizes/tops.csv")
head(tops_df)
# Subset for XL sizes
top_df_XL <- subset(tops_df, Letter.Sizing == "XL")
# Define the absolute file path for your JPEG image (with file:/// prefix if needed)
img_path <- "file:///Users/ananya/columbia/somapython/data_studio/clothing sizes/ralphl.jpg"
# Option: Verify that the file exists
print(file.exists("/Users/ananya/columbia/somapython/somefolder/ralphl.jpg"))  # Should return TRUE
# Add an image column only for the Ralph Lauren row
top_df_XL$img <- ifelse(top_df_XL$Brands == "Ralph Lauren Size Charts", img_path, NA)
# Create a shared beeswarm positioning object
pos <- position_beeswarm(dodge.width = 0.8)
# Build the plot:
p <- ggplot(top_df_XL, aes(x = Bust, y = Letter.Sizing, color = Letter.Sizing)) +
# Plot points for all brands except Ralph Lauren normally.
geom_beeswarm(data = subset(top_df_XL, Brands != "Ralph Lauren Size Charts"),
size = 6, position = pos) +
# For Ralph Lauren rows, compute positions but don't draw a point.
geom_beeswarm(data = subset(top_df_XL, Brands == "Ralph Lauren Size Charts"),
size = 6, position = pos, shape = NA) +
# Overlay the image using the same positioning.
geom_image(data = subset(top_df_XL, Brands == "Ralph Lauren Size Charts"),
aes(image = img),
position = pos,
size = 0.1) +   # Adjust size so the logo fits your dot
scale_color_brewer(palette = "Set2") +
scale_x_continuous(breaks = seq(floor(min(top_df_XL$Bust)),
ceiling(max(top_df_XL$Bust)), by = 1)) +
theme_minimal() +
labs(x = "Bust measurement in inches",
y = "Size",
color = "Size",
title = "Beeswarm Plot with Ralph Lauren Logo") +
theme(axis.text.x = element_text(angle = 0, hjust = 0.5))
print(p)
library(ggplot2)
library(ggbeeswarm)
library(ggimage)
# Read the CSV file (adjust the path as needed)
tops_df <- read.csv("/Users/ananya/columbia/somapython/data_studio/clothing sizes/tops.csv")
head(tops_df)
# Subset for XL sizes
top_df_XL <- subset(tops_df, Letter.Sizing == "XL")
# Define the image file (use an absolute path; note the "file:///" prefix if needed)
img_path <- "file:///Users/ananya/columbia/somapython/somefolder/ralphl.jpg"
# Create an image column: only rows where Brands equals "Ralph Lauren Size Charts" get the file path
top_df_XL$img <- ifelse(top_df_XL$Brands == "Ralph Lauren Size Charts", img_path, NA)
# Create a shared beeswarm positioning object
pos <- position_beeswarm(dodge.width = 0.8, cex = 1)  # Adjust cex if you need more spacing
# Build the plot:
p <- ggplot(top_df_XL, aes(x = Bust, y = Letter.Sizing, color = Letter.Sizing)) +
# Plot normal points for brands other than Ralph Lauren
geom_beeswarm(data = subset(top_df_XL, Brands != "Ralph Lauren Size Charts"),
size = 6, position = pos) +
# For Ralph Lauren points: calculate positions but don't draw the dot
geom_beeswarm(data = subset(top_df_XL, Brands == "Ralph Lauren Size Charts"),
size = 6, position = pos, shape = NA) +
# Overlay the image for Ralph Lauren points.
# We map x, y, and image (using the img column) and apply the same position.
# The additional arguments:
#   - size controls the relative size (tweak as needed),
#   - asp = NA preserves the image’s native aspect ratio (so it isn’t forced square),
#   - color = NA prevents the inherited color from tinting the image.
geom_image(data = subset(top_df_XL, Brands == "Ralph Lauren Size Charts"),
aes(x = Bust, y = Letter.Sizing, image = img),
position = pos,
size = 0.1,
asp = NA,
color = NA) +
scale_color_brewer(palette = "Set2") +
scale_x_continuous(breaks = seq(floor(min(top_df_XL$Bust)),
ceiling(max(top_df_XL$Bust)), by = 1)) +
theme_minimal() +
labs(x = "Bust measurement in inches",
y = "Size",
color = "Size",
title = "Beeswarm Plot with Ralph Lauren Logo") +
theme(axis.text.x = element_text(angle = 0, hjust = 0.5))
print(p)
library(ggplot2)
library(ggbeeswarm)
library(ggimage)
# Read the CSV file (adjust the path as needed)
tops_df <- read.csv("/Users/ananya/columbia/somapython/data_studio/clothing sizes/tops.csv")
head(tops_df)
# Subset for XL sizes
top_df_XL <- subset(tops_df, Letter.Sizing == "XL")
# Define the image file (use an absolute path; note the "file:///" prefix if needed)
img_path <- "file:///Users/ananya/columbia/somapython/data_studio/clothing sizes/ralphl.jpg"
# Create an image column: only rows where Brands equals "Ralph Lauren Size Charts" get the file path
top_df_XL$img <- ifelse(top_df_XL$Brands == "Ralph Lauren Size Charts", img_path, NA)
# Create a shared beeswarm positioning object
pos <- position_beeswarm(dodge.width = 0.8, cex = 1)  # Adjust cex if you need more spacing
# Build the plot:
p <- ggplot(top_df_XL, aes(x = Bust, y = Letter.Sizing, color = Letter.Sizing)) +
# Plot normal points for brands other than Ralph Lauren
geom_beeswarm(data = subset(top_df_XL, Brands != "Ralph Lauren Size Charts"),
size = 6, position = pos) +
# For Ralph Lauren points: calculate positions but don't draw the dot
geom_beeswarm(data = subset(top_df_XL, Brands == "Ralph Lauren Size Charts"),
size = 6, position = pos, shape = NA) +
# Overlay the image for Ralph Lauren points.
# We map x, y, and image (using the img column) and apply the same position.
# The additional arguments:
#   - size controls the relative size (tweak as needed),
#   - asp = NA preserves the image’s native aspect ratio (so it isn’t forced square),
#   - color = NA prevents the inherited color from tinting the image.
geom_image(data = subset(top_df_XL, Brands == "Ralph Lauren Size Charts"),
aes(x = Bust, y = Letter.Sizing, image = img),
position = pos,
size = 0.1,
asp = NA,
color = NA) +
scale_color_brewer(palette = "Set2") +
scale_x_continuous(breaks = seq(floor(min(top_df_XL$Bust)),
ceiling(max(top_df_XL$Bust)), by = 1)) +
theme_minimal() +
labs(x = "Bust measurement in inches",
y = "Size",
color = "Size",
title = "Beeswarm Plot with Ralph Lauren Logo") +
theme(axis.text.x = element_text(angle = 0, hjust = 0.5))
print(p)
library(ggplot2)
library(ggbeeswarm)
library(ggimage)
# Read your CSV file
tops_df <- read.csv("/Users/ananya/columbia/somapython/data_studio/clothing sizes/tops.csv")
# Subset for XL sizes
top_df_XL <- subset(tops_df, Letter.Sizing == "XL")
# Define the image file path (using the "file:///" prefix if needed)
img_path <- "file:///Users/ananya/columbia/somapython/data_studio/clothing sizes/ralphl.jpg"
# Create an 'img' column so that only rows with the desired brand get the image path
top_df_XL$img <- ifelse(top_df_XL$Brands == "Ralph Lauren Size Charts", img_path, NA)
# Create a shared beeswarm position so that every layer aligns
pos <- position_beeswarm(dodge.width = 0.8)
# Build the plot:
# - First layer: all non-Ralph Lauren dots are drawn normally.
# - Second layer: compute positions for Ralph Lauren dots but do not draw a point (shape = NA).
# - Third layer: overlay the image at those same positions.
p <- ggplot(top_df_XL, aes(x = Bust, y = Letter.Sizing)) +
# Normal points for other brands
geom_beeswarm(data = subset(top_df_XL, Brands != "Ralph Lauren Size Charts"),
size = 6, position = pos) +
# For Ralph Lauren, compute the beeswarm positions but do not draw the point.
geom_beeswarm(data = subset(top_df_XL, Brands == "Ralph Lauren Size Charts"),
size = 6, position = pos, shape = NA) +
# Now add the image as a mark (like Observable Plot's image mark)
geom_image(data = subset(top_df_XL, Brands == "Ralph Lauren Size Charts"),
aes(image = img),
position = pos,
size = 0.1,      # Adjust this so the image fits nicely in place of the dot.
asp = NA,        # Preserve the image's aspect ratio.
color = NA) +    # Prevent inherited color from tinting the image.
scale_x_continuous(breaks = seq(floor(min(top_df_XL$Bust)),
ceiling(max(top_df_XL$Bust)), by = 1)) +
theme_minimal() +
labs(x = "Bust measurement in inches",
y = "Size",
title = "Beeswarm Plot with Ralph Lauren Logo")
print(p)
library(ggplot2)
library(ggbeeswarm)
# Read the CSV file
tops_df <- read.csv("/Users/ananya/columbia/somapython/data_studio/clothing sizes/tops.csv")
head(tops_df)
# Filter for only XL sizes
top_df_XL <- subset(tops_df, Letter.Sizing == "XL")
# Create the horizontal beeswarm plot for XL only
p <- ggplot(top_df_XL, aes(x = Bust, y = Letter.Sizing, color = Letter.Sizing,
text = paste("Brand:", Brands, "<br>Bust:", Bust, "<br>Size:", Letter.Sizing))) +
geom_beeswarm(cex = 8, dodge.width = 0.8) +
scale_color_brewer(palette = "Set2") +  # Unique color for XL
scale_x_continuous(breaks = seq(floor(min(top_df_XL$Bust)),
ceiling(max(top_df_XL$Bust)),
by = 1)) +  # Apply continuous scale to the numeric axis (Bust)
theme_minimal() +
labs(x = "Bust Measurement", y = "Size", color = "Size") +
theme(axis.text.x = element_text(angle = 0, hjust = 0.5))
print(p)
library(ggplot2)
library(ggbeeswarm)
library(plotly)
library(ggimage)
library(ggpattern)
tops_df <- read.csv("/Users/ananya/columbia/somapython/data_studio/clothing sizes/tops.csv")
head(tops_df)
top_df_XL <- subset(tops_df, Letter.Sizing == "XL")
p <- ggplot(top_df_XL, aes(x = Bust, y = Letter.Sizing, color = Letter.Sizing,
text = paste("Brand:", Brands, "<br>Bust:", Bust))) +
geom_beeswarm(size = 6, dodge.width = 0.8) +
scale_color_brewer(palette = "Set2")
scale_x_continuous(breaks = seq(floor(min(top_df_XL$Bust)),
ceiling(max(top_df_XL$Bust)),
by = 1)) +
theme_minimal() +
labs(x = "Bust measurement in inches", y = "Size", color = "Size") +
theme(axis.text.x = element_text(angle = 0, hjust = 0.5))
library(ggplot2)
library(ggbeeswarm)
library(plotly)
library(ggimage)
library(ggpattern)
# Read the CSV file (update the file path as needed)
tops_df <- read.csv("/Users/ananya/columbia/somapython/data_studio/clothing sizes/tops.csv")
head(tops_df)
# Subset for XL sizes
top_df_XL <- subset(tops_df, Letter.Sizing == "XL")
# Build the beeswarm plot with tooltip info
p <- ggplot(top_df_XL, aes(x = Bust, y = Letter.Sizing, color = Letter.Sizing,
text = paste("Brand:", Brands, "<br>Bust:", Bust))) +
geom_beeswarm(size = 6, dodge.width = 0.8) +
scale_color_brewer(palette = "Set2") +
scale_x_continuous(breaks = seq(floor(min(top_df_XL$Bust)),
ceiling(max(top_df_XL$Bust)),
by = 1)) +
theme_minimal() +
labs(x = "Bust measurement in inches",
y = "Size",
color = "Size",
title = "Interactive Beeswarm Plot") +
theme(axis.text.x = element_text(angle = 0, hjust = 0.5))
# Convert the ggplot to an interactive plotly object with hover tooltips
p_interactive <- ggplotly(p, tooltip = "text")
print(p_interactive)
library(ggplot2)
library(ggbeeswarm)
library(plotly)
library(ggimage)
library(ggpattern)
# Read the CSV file (update the file path as needed)
tops_df <- read.csv("/Users/ananya/columbia/somapython/data_studio/clothing sizes/tops.csv")
head(tops_df)
top_df_XL <- subset(tops_df, Letter.Sizing == "XL")
p <- ggplot(top_df_XL, aes(x = Bust, y = Letter.Sizing, color = Letter.Sizing,
text = paste("Brand:", Brands, "<br>Bust:", Bust))) +
geom_beeswarm(size = 6, dodge.width = 0.8) +
scale_color_brewer(palette = "Set2") +
scale_x_continuous(breaks = seq(floor(min(top_df_XL$Bust)),
ceiling(max(top_df_XL$Bust)),
by = 1)) +
theme_minimal() +
labs(x = "Bust measurement in inches",
y = "Size",
color = "Size",
title = "Forever 21 and Ralph Lauren on opposite ends on what counts as XL") +
theme(axis.text.x = element_text(angle = 0, hjust = 0.5))
# Convert the ggplot to an interactive plotly object with hover tooltips
p_interactive <- ggplotly(p, tooltip = "text")
print(p_interactive)
library(ggplot2)
library(ggbeeswarm)
library(plotly)
library(ggimage)
library(ggpattern)
# Read the CSV file (update the file path as needed)
tops_df <- read.csv("/Users/ananya/columbia/somapython/data_studio/clothing sizes/tops.csv")
head(tops_df)
top_df_XL <- subset(tops_df, Letter.Sizing == "XL")
p <- ggplot(top_df_XL, aes(x = Bust, y = Letter.Sizing, color = Letter.Sizing,
text = paste("Brand:", Brands, "<br>Bust:", Bust))) +
geom_beeswarm(size = 6, dodge.width = 0.8) +
scale_color_brewer(palette = "Set2") +
scale_x_continuous(breaks = seq(floor(min(top_df_XL$Bust)),
ceiling(max(top_df_XL$Bust)),
by = 1)) +
theme_minimal() +
labs(x = "Bust measurement in inches",
y = "Size",
color = "Size",
title = "Forever 21 and Ralph Lauren on opposite ends on what counts as XL",
subtitle = "Hoover for each point to see what UK and US clothing brands mark as an XL for women's tops") +
caption= "Dataset from sizecharts.com. Majority data added from Ananya Chetia"
library(ggplot2)
library(ggbeeswarm)
library(plotly)
library(ggimage)
library(ggpattern)
# Read the CSV file (update the file path as needed)
tops_df <- read.csv("/Users/ananya/columbia/somapython/data_studio/clothing sizes/tops.csv")
head(tops_df)
top_df_XL <- subset(tops_df, Letter.Sizing == "XL")
p <- ggplot(top_df_XL, aes(x = Bust, y = Letter.Sizing, color = Letter.Sizing,
text = paste("Brand:", Brands, "<br>Bust:", Bust))) +
geom_beeswarm(size = 6, dodge.width = 0.8) +
scale_color_brewer(palette = "Set2") +
scale_x_continuous(breaks = seq(floor(min(top_df_XL$Bust)),
ceiling(max(top_df_XL$Bust)),
by = 1)) +
theme_minimal() +
labs(x = "Bust measurement in inches",
y = "Size",
color = "Size",
title = "Forever 21 and Ralph Lauren on opposite ends on what counts as XL",
subtitle = "Hoover for each point to see what UK and US clothing brands mark as an XL for women's tops",
caption= "Dataset from sizecharts.com. Majority data added from Ananya Chetia") +
theme(axis.text.x = element_text(angle = 0, hjust = 0.5))
# Convert the ggplot to an interactive plotly object with hover tooltips
p_interactive <- ggplotly(p, tooltip = "text")
print(p_interactive)
library(ggplot2)
library(ggbeeswarm)
library(plotly)
library(ggimage)
library(ggpattern)
# Read the CSV file (update the file path as needed)
tops_df <- read.csv("/Users/ananya/columbia/somapython/data_studio/clothing sizes/tops.csv")
head(tops_df)
top_df_XL <- subset(tops_df, Letter.Sizing == "XL")
p <- ggplot(top_df_XL, aes(x = Bust, y = Letter.Sizing, color = Letter.Sizing,
text = paste("Brand:", Brands, "<br>Bust:", Bust))) +
geom_beeswarm(color = "darkorchid4", size = 6, dodge.width = 0.8)+
scale_x_continuous(breaks = seq(floor(min(top_df_XL$Bust)),
ceiling(max(top_df_XL$Bust)),
by = 1)) +
theme_minimal() +
labs(x = "Bust measurement in inches",
y = "Size",
color = "Size",
title = "Forever 21 and Ralph Lauren on opposite ends on what counts as XL",
subtitle = "Hoover for each point to see what UK and US clothing brands mark as an XL for women's tops",
caption= "Dataset from sizecharts.com. Majority data added from Ananya Chetia") +
theme(axis.text.x = element_text(angle = 0, hjust = 0.5))
# Convert the ggplot to an interactive plotly object with hover tooltips
p_interactive <- ggplotly(p, tooltip = "text")
print(p_interactive)
library(ggplot2)
library(ggbeeswarm)
library(plotly)
library(ggimage)
library(ggpattern)
# Read the CSV file (update the file path as needed)
tops_df <- read.csv("/Users/ananya/columbia/somapython/data_studio/clothing sizes/tops.csv")
head(tops_df)
top_df_XL <- subset(tops_df, Letter.Sizing == "XL")
p <- ggplot(top_df_XL, aes(x = Bust, y = Letter.Sizing, color = Letter.Sizing,
text = paste("Brand:", Brands, "<br>Bust:", Bust))) +
geom_beeswarm(color = "darkorchid4", size = 6, dodge.width = 0.8)+
scale_x_continuous(breaks = seq(floor(min(top_df_XL$Bust)),
ceiling(max(top_df_XL$Bust)),
by = 1)) +
theme_minimal() +
labs(x = "Bust measurement in inches",
y = "Size",
color = "Size",
title = "Forever 21 and Ralph Lauren on opposite ends on what counts as XL",
subtitle = "Hoover for each point to see what UK and US clothing brands mark as an XL for women's tops",
caption= "Dataset from sizecharts.com. Majority data added from Ananya Chetia") +
theme(axis.text.x = element_text(angle = 0, hjust = 0.5))
# Convert the ggplot to an interactive plotly object with hover tooltips
p_interactive <- ggplotly(p, tooltip = "text")
print(p_interactive)
